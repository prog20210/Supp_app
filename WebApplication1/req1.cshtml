
@using Npgsql;
@using Npgsql.EntityFrameworkCore.PostgreSQL.Design
@using System.Configuration;
@using System.Globalization;

@using System.Configuration;
@using System.Diagnostics;
@using System.Management.Automation;
@using System.Web;
@using System.Net.Mail;
@using System.Net.Mime;
@using System.Threading;
@using System.ComponentModel;



@{







    if (IsPost) // Если входящий запрос
    {
        // Разобрать запрос. Присвоить значения переменным


        string email = Request.Form["email"];
        string trademark = Request.Form["trademark"];
        string city = Request.Form["city"];
        string dep = Request.Form["dep"];
        string lastname = Request.Form["lastName"];
        string firstname = Request.Form["firstName"];
        string otch = Request.Form["otch"];
        string dolz = Request.Form["dolz"];
        string ver = Request.Form["ver"];

        string opsl = Request.Form["opsl"];
        string katsl = Request.Form["ver"];
        string tnumb = Request.Form["tnumb"];


        ConnectionStringSettings constr;
        constr = ConfigurationManager.ConnectionStrings["con"];


        NpgsqlConnection con = new NpgsqlConnection();

        //con.ConnectionString = constr[0];


        con.ConnectionString = constr.ToString();

        //"Server = 127.0.0.1; Port = 5433; Database = sup; User Id = postgres; Password =12345";

        try
        {
            con.Open();
            int num;
            int numbn;
            NpgsqlCommand com = con.CreateCommand();
            com.CommandText = "select max(id) from req";
            object numb1 = com.ExecuteScalar();
            try
            {
                num = Convert.ToInt16(numb1);
            }

            catch
            {
                num = 0;
            }

            numbn = num + 1;
            DateTime dt = DateTime.Now;

            string[] dats = dt.GetDateTimeFormats();



            string dattim = dats[46].ToString();
            string[] dat = dattim.Split(' ');
            string dt1 = dat[0];
            string tim = dat[1];

            string[] date1 = dt1.Split('-');

            string yer = date1[0].ToString();



            com.CommandText = "insert into req (id, email, trademark, city, dep, firstname, lastname, otch, dolz, opsl,dat,tim,tnumb,urtver,yr,status)" + " " +
        "values" + " " + "(" + numbn.ToString() + "," + "'" + email + "'" + "," + "'" + trademark + "'" + "," + "'" + city + "'" + "," + "'" + dep + "'" + "," + "'" + firstname + "'" + "," +
        "'" + lastname + "'" + "," + "'" + otch + "'" + "," + "'" + dolz + "'" + "," + "'" + opsl + "'" + "," + " TO_DATE (" + "'" + dt1 + "'" + "," + "'YYYY-MM-DD'" + ")" + "," + "LOCALTIME" + "," + "'" + tnumb + "'" + "," + "'" + ver + "'" + "," + "'" + yer + "'" + "," + "'" + "В работе" + "'" + ")";
            // TO_TIME ('08:30 AM', 'HH:MI AM')1

            com.ExecuteScalar();

            //  insert into req(id, email, trademark, city, dep, firstname, lastname, otch, dolz, opsl)values(2,'ghghjghjhjgg','jkkghghjghjghjg','mbnvbvnbvbnvbnv','nbnmbnmbnmbnmbnmb','vbvnbvbnvbnvnbvnbvbn','nvvbnvbvnbvbnvbnvbn','vbvbnvnbvbnvbnvbnvbn','gcvcvbcbvcvbcvbcvbcvbcb','nvbnvnbvnbvnbvbnbn')

            MailAddress from = new MailAddress("somemail@gmail.com", "Tom");
            MailAddress to = new MailAddress("somemail@yandex.ru");


            
            // создаем объект сообщения
            //MailMessage m = new MailMessage(from, to);
            // тема письма
            //m.Subject = "Тест";
            // текст письма
            //m.Body = "<h2>Письмо-тест работы smtp-клиента</h2>";
            // письмо представляет код html
            //m.IsBodyHtml = true;
            // адрес smtp-сервера и порт, с которого будем отправлять письмо
            //SmtpClient smtp = new SmtpClient("smtp.gmail.com", 587);
            // логин и пароль
            //smtp.Credentials = new NetworkCredential("somemail@gmail.com", "mypassword");
            //smtp.EnableSsl = true;
            //smtp.Send(m);



        }


        //       com.CommandText= "insert into req(id, email, trademark, city, dep, firstname, lastname, otch, dolz, opsl, katsl)"+
        //"values("+ id+","+"'"+ " +','              +''     ', 'Sankt-Petersburg', 'ul Dybenko', 'Maria', 'Ivanova', 'Ivanovna', 'BC', 'Lost password', 'Restore password');

        catch
        {


        }






        <link rel="stylesheet" href="main.css">

        <text>
            <br> You entered: <br />
            <br> emai: @email <br />
            <br> mark: @trademark <br />
            <br> city: @city <br />
            <br> dep: @dep <br />
            <br>фамилия: @lastname <br />
            <br>имя: @firstname <br />
            <br>отчество: @otch <br />
            <br> dolz: @dolz <br />
            <br>случай: @opsl <br />

        </text>


        <text>

            Благодарим за информацию. Обязательно проинформируем Вас о результатах отработки обращения

        </text>

        <p align="center">

            <input type="butto1n" class="butt" name="back" value="На главную " onclick="document.location='Default.aspx'" />
        </p>

    }


}












































































































































































































































































                >














































                </form>

                </body>
                </html>
