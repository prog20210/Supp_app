<@Page Language="C#">
    @using System.Web.UI.HtmlControls;

    @using System;
    @using System.Collections.Generic;
    @using System.Linq;
    @using System.Web;
    @using System.Web.UI;
    @using System.Web.UI.WebControls;
    @using System.Configuration;
    @using System.Data.SqlClient;
    @using Npgsql;
    @using Npgsql.EntityFrameworkCore.PostgreSQL.Design;
    @using System.Configuration;
    @using System.Web.UI.HtmlControls;
    @using System.Data;
    @using System.Web.Mvc.Html;
    @using ClosedXML
    @using Aspose.Html
    

    @{


        Layout = null;
        int i;
        int n = 0;
        string html;
        int nz = 0;
        string dat = "";
        string year;
        string[] dt;
        string[] tim;
        string t1;
        StringWriter sw = new StringWriter();
        DateTime dt1;
        string[] podp=new String[1];
        int t3 = 0;


        dt1 = DateTime.Now;

        t1 = dt1.ToString();

        tim = t1.Split(' ');

        dat = dt1.ToShortDateString();


        for (i = 1; i < 60; i++)
        {
            n = i;

        }
        int t = 0;
        int j = 3;

        var tab1 = new HtmlTable();


        ConnectionStringSettings constr;
        constr = ConfigurationManager.ConnectionStrings["con"];


        NpgsqlConnection con = new NpgsqlConnection();


        con.ConnectionString = constr.ToString();

        //"Server = 127.0.0.1; Port = 5433; Database = sup; User Id = postgres; Password =12345";



        con.Open();
        int num;
        int numbn;
        NpgsqlCommand com = con.CreateCommand();
        com.CommandText = "select * from req";

        try
        {

            // 

            com.CommandText = "select COUNT(*) from req";

            // получить текущее количество столбцов в таблице из БД
            nz = Convert.ToInt16(com.ExecuteScalar());


            com.CommandText = "select * from req";

            NpgsqlDataReader rd = com.ExecuteReader();





            // Доработать цикл чтения и заполнения таблицы
            if (rd.HasRows)
            {



                while (rd.Read())
                {



                }
            }

            rd.Close();


            // создаем таблицу динамически. Дописать процедуру создания. Разобраться почему зависало 

            using (HTMLDocument doc = new HTMLDocument())
            {
                var body = doc.Body;

                var cols = 6;
                var rows = nz;

                /// заголовок таблицы. Получить  


                ////

                var tab2 = doc.GetElementsByTagName("html").First();
                var tbody = doc.CreateElement("tbody");
                tab2.AppendChild(tbody);


                var tr = doc.CreateElement("tr");
                tbody.AppendChild(tr);

                // продолжить писать шапку таблицы. Вставка ячеек

                var isFirstRowHeader = true;


                if (isFirstRowHeader)
                {

                    // неправильно обрабатывается запрос посмотреть 

                    NpgsqlCommand com2 = con.CreateCommand();



                    NpgsqlConnection con1 = new NpgsqlConnection();


                    con1.ConnectionString = constr.ToString();

                    con1.Open();


                    int nzap = 0;

                    com2.CommandText = "Select count(zagl) from otcols";

                    nzap=Convert.ToInt32(com2.ExecuteScalar());


                    com2.CommandText = "select zagl from otcols order by id asc";
                    string namcol;

                    NpgsqlDataReader rd2 = com2.ExecuteReader();



                    t3 = 0;

                    for(t3=0;t3<=nzap;t3++)


                    {
                        namcol = "";

                        tr = doc.CreateElement("tr");
                        tbody.AppendChild(tr);

                        var th = doc.CreateElement("th");


                        namcol = rd2[t3].ToString();


                        var title = doc.CreateTextNode(namcol);
                        th.AppendChild(title);
                        tr.AppendChild(th);

                        t3 = t3 + 1; //  итоговое число колонок
                        rd2.NextResult();

                    }












                }



            }






            /// инициализация читалки и чтение из базы заголовков таблицы 




            // Получить элемент таблицы. Если переменная пустая - NULL, создать таблицу





            //////////////////////////////////////

















            // Создание столбцов заголовков таблицы 
            //             for (int k = 1; j < cols + 1; k++)
            //         {


            // Создание заголовков  в таблице



            //         }






        }

        catch
        {

        }




        using (sw)
        {




        }


    }



    <body>
        <div>
            <link rel="stylesheet" href="main.css">

            <h2 align="center">Список обращений на @dat г. </h2>


         

            <table name="html" class="table table-bordered  table-hover">
                <thead>
                <td>
                    <p align="center"> Дата </p>

                </td>
                
                <td>
                    <p align="center"> Время </p>
                </td>

                <td>
                    <p align="center"> Год </p>
                </td>

                <td>
                    <p align="center"> ФИО</p>
                </td>
                
                <td>
                    <p align="center"> Подразделение</p>
                </td>

                <td>
                    <p align="center"> Краткое описание</p>
                </td>


                <td>
                    <p align="center"> Статус обращения </p>


                </td>
                </thead>

                <tbody>



                    @{
                        
                        
                        //добавление в тело таблицы

                        var document = new HTMLDocument();

                        // переписать обработку тела списка задач 



                        /////////////////////////////////////
                        for (i = 0; i <= nz; i++)
                        {


                            // цикл по строкам
                            for (int h = 1; h <= 6; h++)  //nz- к-во строк
                            {
                    <tr>
                        <td align="center">

                            @dat

                        </td>

                        <td align="center">

                            @tim[1]

                        </td>

                        <td align="center">
                            @{

                                dt = @dat.Split('.');

                                year = dt[2];


                            }

                            @year

                        </td>




                        <td align="center">

                            j

                        </td>


                        <td align="center">

                            pppppppppppppppppp

                        </td>



                        <td align="center">

                            ghghghhghhhjjjjikk

                        </td>





                        <td align="center">

                           stob

                        </td>









                    </tr>


                               

                            }


                        }
                    }

                </tbody>


            </table>




       














            <table name="html" class="table table-bordered  table-hover">

               

            <p align="center"> <button> Выгрузить отчет </button> </p>


        </div>



    </body>
    </html>
